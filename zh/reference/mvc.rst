MVC架构
====================

Phalcon提供了面向对象的类，用以在应用程序中实现模型，视图，控制器架构（通常我们称之为 MVC_ 架构）。这种设计模式被广泛的应用到其他Web框架以及桌面应用程序中。

MVC的好处包括：

* 分离业务逻辑与用户界面以及数据库层
* 清晰的代码结构，使代码更容易维护

如果你决定使用MVC架构来开发你的程序，那么应用程序的每个请求都将采用 MVC_ 架构的方式来管理。Phalcon是一个采用C语言开发的php框架，这种模式是一种可以很好的提供高性能的方法。

模型
------
模型代表者应用中的数据及操作数据的规则。模型主要用来管理和数据库中相关的表交互的方法。在绝大多数情况下，数据库中的每张表都会一个应用的模型与之对应。应用中的业务逻辑也会放到模型中去。:doc:`更多可参看<models>`

视图
-----
视图即是应用的图形接口。视科学文件通常是嵌入了只与显示有关的PHP代码。视图用来显示发向浏览器端的数据及提供用来向服务器发送请示的展示页面。:doc:`参见<views>`

控制器
-----------
控制器为对models及views间的流（数据流）进行控制。控制器负责处理从浏览器端来的数据，然后与模型进行交互，之后发送数据到视图端进行展示。:doc:`参看<controllers>`
.. _MVC: http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller
